// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=r512load0, b=r512load1, c=r512load2, d=r512load3, e=r512load4, f=r512load5, g=r512load6, h=r512load7);
    RAM512(in=in, load=r512load0, address=address[0..8], out=r512out0);
    RAM512(in=in, load=r512load1, address=address[0..8], out=r512out1);
    RAM512(in=in, load=r512load2, address=address[0..8], out=r512out2);
    RAM512(in=in, load=r512load3, address=address[0..8], out=r512out3);
    RAM512(in=in, load=r512load4, address=address[0..8], out=r512out4);
    RAM512(in=in, load=r512load5, address=address[0..8], out=r512out5);
    RAM512(in=in, load=r512load6, address=address[0..8], out=r512out6);
    RAM512(in=in, load=r512load7, address=address[0..8], out=r512out7);
    Mux8Way16(a=r512out0, b=r512out1, c=r512out2, d=r512out3, e=r512out4, f=r512out5, g=r512out6, h=r512out7, sel=address[9..11], out=out);
}
