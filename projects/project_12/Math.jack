// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    static Array twoToThe;
    static Array otherArray;


    /** Initializes the library. */
    function void init() {
        var int index;
        let otherArray = Array.new(16);
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        while (index < 15) {
            let index = index + 1;
            let twoToThe[index] = twoToThe[index - 1] + twoToThe[index - 1];
        }
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            let x = -x;
        }
        return x;
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int a;
        var int b;
        var int c;
        var int d;
        var int e;
        let e = ((x < 0) & (y > 0)) | ((x > 0) & (y < 0));
        let x = Math.abs(x);
        let y = Math.abs(y);
        if ((x < y)) {
            let b = x;
            let x = y;
            let y = b;
        }
        while ((c - 1) < (y - 1)) {
            if (~(twoToThe[d] & y = 0)) {
                let a = a + x;
                let c = c + twoToThe[d];
            }
            let x = x + x;
            let d = d + 1;
        }
        if (e) {
            let a = -a;
        }
        return a;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int a;
        var int b;
        var int c;
        var int d;
        if (y = 0) {
            do Sys.error(3);
        }
        let c = ((x < 0) & (y > 0)) | ((x > 0) & (y < 0));
        let otherArray[0] = Math.abs(y);
        let x = Math.abs(x);
        while ((a < 15) & (~d)) {

            let d = (32767 - (otherArray[a] - 1)) < (otherArray[a] - 1);
            if (~(d)) {
                let otherArray[a + 1] = otherArray[a] + otherArray[a];
                let d = ((otherArray[a + 1] - 1) > (x - 1));
                if (~d) {
                     let a = a + 1;
                }
            }
        }
        while ((a > -1)) {
            if (~((otherArray[a] - 1) > (x - 1))) {
                let b = b + twoToThe[a];
                let x = x - otherArray[a];
            }
            let a = a - 1;
        }
        if (c) {
            let b = -b;
        }
        return b;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int a;
        var int b;
        var int c;
        var int d;
        if (x < 0) {
            do Sys.error(4);
        }
        let a = 7;
        while (a > -1) {
            let b = d + twoToThe[a];
            let c = Math.multiply(b, b);
            if (~(c > x) & ~(c < 0)) {
                let d = b;
            }
            let a = a -1;
        }
        return d;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            let b = a;
        }
        return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            let b = a;
        }
        return b;
    }
}
